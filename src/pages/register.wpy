<!--绑定手机-->
<template>
  <form bindsubmit="formSubmit">
    <view class="section">
      <view class="section_title">手机号</view>
      <input name="phone" type="number" @input="phoneInput" value="{{phone}}" placeholder="请输入手机号码" maxlength="11" focus="{{true}}" />
    </view>
    <view class="section">
      <view class="section_title">验证码</view>
      <input class="code" name="code" type="number" placeholder="请输入验证码" />
      <view class="btn send_code">
        <text wx:if="{{sendMsgDisabled}}">{{time+'秒后获取'}}</text>
        <text @tap="sendCode" wx:else="{{sendMsgDisabled}}">发送验证码</text>
      </view>
    </view>
    <view class="btn_comfire">
      <button class="button type_yellow" formType="submit">完成</button>
    </view>
  </form>
</template>

<script>
  import wepy from 'wepy';
  import api from '../api/api';
  import tip from '../utils/tip';
  import util from '../utils/util';
  import {
    ISDEV,
    USER_SPECICAL_INFO
  } from '../utils/constant';
  export default class Register extends wepy.page {
    config = {
      navigationBarTitleText: '绑定手机',
    }
    components = {}
    data = {
      phone: ISDEV ? '12345678901' : '',
      sendMsgDisabled: false,
      time: 60
    }
    async sendVerifyCode() {
      let json = await api.sendRandCode({
        query: {
          mobile: this.phone
        }
      });
      console.log('验证码已发送: ', json);
      if (json.data.code) {
        tip.success("发送成功!", 1000);
        this.$apply();
      }
    }
    async registerUser(phone, code) {
      let that = this;
      let openid = this.$parent.globalData.userSpecialInfo.openid;
      const json = await api.registerUser({
        query: {
          openid: openid,
          mobile: phone,
          verification_code: code
        }
      });
      let data = json.data;
      if (data.code == 0) {
        wepy.navigateBack();
        tip.success(data.msg, 1000);
        that.$apply();
      } else {
        tip.error(data.msg, 1000)
      }
      that.showLoading = false;
    }
    onLoad() {
      let that = this;
    }
    computed = {
    }
    methods = {
      phoneInput(e) {
        this.phone = e.detail.value;
      },
      sendCode(e) {
        if (this.phone == "") {
          tip.alert('请输入手机号');
          return;
        } else if(!util.vailPhone(this.phone)) {
          tip.alert('手机号错误');
          return;
        }
        this.sendVerifyCode();
        let that = this;
        that.sendMsgDisabled = true;
        let interval = setInterval(() => {
          if ((that.time--) <= 0) {
            that.time = 10;
            that.sendMsgDisabled = false;
            clearInterval(interval);
            that.$apply();
          }
          that.$apply();
        }, 1000);
      },
      formSubmit(e) {
        let that = this;
        let phone = e.detail.value.phone;
        let code = e.detail.value.code;
        if (phone == '') {
          tip.alert('输入手机号码');
          return;
        }
        if (code == '') {
          tip.alert('输入验证码');
          return;
        }
        that.registerUser(phone, code);
        console.log('绑定手机数据: ', e.detail.value)
      }
    }
  }
</script>

<style lang="less">
  .section {
    display: flex;
    align-items: center;
    padding: 20rpx 30rpx;
    border-bottom: 1px solid #dbdbdb;
    background: #fff;
    .section_title {
      color: #1a1a1a;
      padding-right: 75rpx;
    }
    .btn {
      padding: 15rpx 10rpx;
      border: 1px solid #000000;
      -moz-border-radius: 5rpx;
      /* Firefox */
      -webkit-border-radius: 5rpx;
      /* Safari 和 Chrome */
      border-radius: 5rpx;
      /* Opera 10.5+, 以及使用了IE-CSS3的IE浏览器 */
      color: #000000;
    }
    .send_code {
      margin-left: 40rpx;
    }
  }
  .btn_comfire {
    margin-top: 64rpx;
    padding: 0 24rpx;
  }
  .code {
    width: 300rpx;
  }
</style>
