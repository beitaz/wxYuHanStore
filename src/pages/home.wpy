<template>
  <view class="container">
    <view class="search-wrapper">
      <view class="search_read_only">
        <navigator class="search_content" open-type="navigate" url="/pages/search">
          <i class="iconfont icon-search"></i>
          <view class="search_input">搜索商品</view>
        </navigator>
        <navigator class="message" url="/pages/messages">
          <i class="iconfont icon-message"></i>
          <!-- <view class="doc">消息</view> -->
        </navigator>
      </view>
    </view>

    <swiper class="swiper" indicator-active-color="{{indicatorActiveColor}}" indicator-dots="{{indicatorDots}}" autoplay="{{autoplay}}" interval="{{interval}}" duration="{{duration}}" circular="true">
      <block wx:for="{{adList}}" wx:key="key">
        <swiper-item>
          <!-- 手指点击事件 @tap 等同 @tap.default (事件修饰符 .default 是默认值,可以省略不写) -->
          <!-- 事件传参语法糖 @tap="click({{index}}) 等同 bindtap="click" data-index={{index}} -->
          <image src="{{item.picUrl}}" class="slide-image" @tap="goToAdvert({{item.advertUrl}})" />
        </swiper-item>
      </block>
    </swiper>

    <view class="nav_list">
      <navigator open-type="navigate" url="/pages/sign_in" hover-class="navigator-hover">
        <image src="../images/icon_nav_01_new.png" class="nav_icon" />
        <view class="nav_text">签到有礼</view>
      </navigator>
      <navigator open-type="navigate" url="/pages/exchange_goods" hover-class="navigator-hover">
        <image src="../images/icon_nav_02_new.png" class="nav_icon" />
        <view class="nav_text">换货专区</view>
      </navigator>
      <navigator open-type="navigate" url="/pages/wholesale" hover-class="navigator-hover">
        <image src="../images/icon_nav_03_new.png" class="nav_icon" />
        <view class="nav_text">特价专区</view>
      </navigator>
      <navigator open-type="navigate" url="/pages/replenishment_goods" hover-class="navigator-hover">
        <image src="../images/icon_nav_04_new.png" class="nav_icon" />
        <view class="nav_text">我要补货</view>
      </navigator>
    </view>
    <!--发现好商品模块-->
    <discover :list.sync="discoverList"></discover>
    <recommend :list.sync="recommendList"></recommend>
    <!-- <view class="recommend-title">商品推荐</view> -->
    <!--加载更多时动画-->
    <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
    <!--暂无数据显示-->
    <placeholder :show.sync="is_empty" message="暂无发现数据"></placeholder>
    <!-- 弹屏  types:0 图片  1：领红包   show 是否显示  @close 关闭回调  @callback 点击图片回调 或确定回调 -->
    <!-- :props.sync 动态传值;  @function.user 自定义事件处理函数(默认有 .default, .stop, .user 三种) -->
    <bombscreen :types.sync="tps" :show.sync="is_show_alert" @close.user="closeAlert" @callback.user="alertCallback"></bombscreen>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '../api/api'
  import tip from '../utils/tip'
  import Discover from '../components/discover'
  import Recommend from '../components/recommend'
  import Bombscreen from '../components/bomb_screen'
  import BottomLoadMore from '../components/common/bottomLoadMore'
  import Placeholder from '../components/common/placeholder'
  import { SHOW_ALERT, ALERT_TYPE } from '../utils/constant'
  export default class Home extends wepy.page {
    config = {
      navigationBarTitleText: '素洁服装厂',
    }
    components = {
      discover: Discover,
      recommend: Recommend,
      bottomLoadMore: BottomLoadMore,
      placeholder: Placeholder,
      bombscreen: Bombscreen
    }
    data = {
      imgUrls: [
        '../images/image_demo.png',
      ],
      indicatorDots: true,
      autoplay: true,
      interval: 3000,
      duration: 1000,
      indicatorActiveColor: "#fff",
      discoverList: [],
      recommendList: [],
      is_empty: false, // 是否有数据
      currentPage: 1, // 当前页面
      page_total: 0,  // 总页数
      showLoading: true,  // 是否显示底部 loading
      preventRepeatReuqest: false,  // 防止重复加载
      adList: [],  // 广告列表
      tps: ALERT_TYPE,
      is_show_alert: SHOW_ALERT
    }
    // 获取发现好商品
    async getDiscoverList() {
      let that = this;
      let json = await api.getHomeDisvocerList();
      if (json.data.code == 0) {
        // console.log(json);
        that.discoverList = json.data.list;
        that.$apply();
        // 原始数据发送到远程服务器
        api.grabDiscovers({
          method: 'POST',
          query: json.data
        });
      }
      that.showLoading = false;
    }
    // 获取推荐商品
    async getRecommendList(currentPage, size) {
      let that = this;
      const json = await api.hostGoodsList({
        query: {
          page: currentPage || 1,
          size: size || 10
        }
      });
      if (json.data.code == 0) {
        // 原始数据发送到远程服务器
        api.grabDiscovers({
          method: 'POST',
          query: json.data
        });
        console.log(json);
        that.recommendList = [...that.recommendList, ...json.data.list];
        if (json.data.page_total) {
          that.page_total = json.data.page_total;
          if (json.data.page_total == 0) {
            that.is_empty = true; // 暂无数据
          }
        };
        that.$apply();
      }
      that.showLoading = false;
    }
    // 异步获取首页广告
    async getAdList() {
      const json = await api.getAdList({
        query: {}
      });
      if (json.data.code == 0) {
        this.adList = json.data.list;
        this.$apply();
        // 原始数据发送到远程服务器
        api.grabAdverts({
          method: 'POST',
          query: json.data
        });
      }
    }
    onLoad() {
      this.discoverList = [];
      this.getAdList();
      this.getDiscoverList();
      this.getRecommendList();
    }
    computed = {}
    methods = {
      // 手指点击广告图片后,跳转到对应页面
      goToAdvert(advertUrl) {
        if (advertUrl.length !== 0) {
          wepy.navigateTo({ url: advertUrl });
        }
      },
      onShareAppMessage: function(res) {
        if (res.from === 'button') {
          // 来自页面内转发按钮
          console.log(res.target)
        }
        return {
          title: this.navigationBarTitleText,
          path: '/pages/home',
          success: function(res) {
            // 转发成功
          },
          fail: function(res) {
            // 转发失败
          }
        }
      },
      alertCallback() {
        this.is_show_alert = false;
        wx.showToast({
          icon: 'loading',
          title: '@TODO:跳转',
          mask: true,
          duration: 2000
        });
      },
      closeAlert() {
        this.is_show_alert = false;
        wx.showToast({
          title: '关闭',
          mask: true,
          duration: 200
        });
      }
    }
    events = {}
    // 加载更多
    onReachBottom() {
      let that = this;
      that.showLoading = true;
      console.log('页面滚动');
      console.log(that.page_total + "===" + that.currentPage);
      //判断总页数是否大于翻页数
      if ((that.page_total) > that.currentPage) {
        //防止重复加载
        if (that.preventRepeatReuqest) {
          return true;
        }
        that.preventRepeatReuqest = true;
        that.currentPage++;
        that.getRecommendList(that.currentPage);
        that.preventRepeatReuqest = false;
      } else {
        that.showLoading = false;
      }
    };
  }
</script>

<style lang="less">

  .search-wrapper {
    background: rgba(0, 0, 0, 0.618);
    padding: 5rpx 0;
    .search_content {
      background: rgba(0, 0, 0, 0.382);
      border: 1rpx solid rgba(0, 0, 0, 0.618);
      .icon-search, .search_input {
        color: #efefee;
        &.iconfont {
          margin-right: 5rpx;
        }
      }
    }
    .message {
      display: block;
      text-align: center;
      margin-left: 20rpx;
      color: #efefee;
    }
  }

  .swiper {
    height: 348rpx;
    .slide-image {
      width: 100%;
      height: 100%;
    }
  }

  .nav_list {
    color: #404040;
    display: flex;
    font-size: 26rpx;
    justify-content: space-between;
    padding: 15rpx 50rpx;
    navigator {
      text-align: center;
      padding: 15rpx 20rpx 0rpx 20rpx;
      border-radius: 10rpx;
      &.navigator-hover {
        background-color: rgba(0, 0, 0, .1);
        opacity: 0.618;
      }
    }
    .nav_icon {
      height: 80rpx;
      margin: 0 auto;
      width: 80rpx;
      margin-bottom: 14rpx;
    }
    .nav_text {
      font-size: 26rpx
    }
  }
</style>
