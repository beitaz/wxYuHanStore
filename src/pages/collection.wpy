
<template>
  <view>
    <view class="collection">
      <!-- tab模块 -->
      <view class="tab_box">
        <tab @currentTab.user="getCurrentTab" :currentTab.sync="currentTab" :tabList.sync="tabList"></tab>
      </view>
      <scroll-view scroll-y="true" class="swiper-item-box" style="height:{{winHeight - 31}}px" bindscrolltolower="onReachBottom">
        <!-- 我的足迹 -->
        <collectionList :list.sync="browselist" wx:if="{{currentTab == 0}}"></collectionList>
        <!-- 我的收藏 -->
        <collectionList :list.sync="favorlist" wx:if="{{currentTab == 1}}"></collectionList>
      </scroll-view>
    </view>
    <!--加载更多时动画-->
    <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import api from '../api/api';
  import Tab from '../components/tab'
  import CollectionList from '../components/collection_list'
  import BottomLoadMore from "../components/common/bottomLoadMore"
  import {
    SYSTEM_INFO,
    USER_SPECICAL_INFO
  } from '../utils/constant';
  export default class PointsRules extends wepy.page {
    config = {
      navigationBarTitleText: "",
    }
    components = {
      tab: Tab,
      collectionList: CollectionList,
      bottomLoadMore: BottomLoadMore
    }
    data = {
      browselist: [],
      favorlist: [],
      tabList: ["我的足迹", "我的收藏"],
      currentTab: 0,
      winHeight: 0,
      currentPage: 1,  // 当前页面
      page_total: 0,  // 总页数
      showLoading: true,  // 是否显示底部loading
      preventRepeatReuqest: false  // 防止重复加载
    }
    // 我的足迹
    async getUserBrowse(currentPage, size) {
      let openId = this.$parent.globalData.userSpecialInfo.openid;
      const json = await api.browseInfo({
        query: {
          openid: openId,
          page: currentPage || 1,
          size: size || 10
        }
      });
      console.log('获取用户足迹', json);
      if (json.data.code == 0) {
        this.browselist = [...this.browselist, ...json.data.list];
        this.page_total = json.data.page_total;
        console.log('this.browselist ', this.browselist);
        this.showLoading = false;
        this.$invoke('collectionList', 'refreshList', this.browselist);
      } else {
        tip.error(json.data.msg)
      }
      this.$apply();
    }
    // 我的收藏
    async getUserFavorite(currentPage, size) {
      let that = this;
      let openId = this.$parent.globalData.userSpecialInfo.openid;
      const json = await api.favoriteInfo({
        query: {
          openid: openId,
          page: currentPage || 1,
          size: size || 10
        }
      });
      console.log('我的收藏', json);
      if (json.data.code == 0) {
        that.favorlist = [...that.favorlist, ...json.data.list];
        that.page_total = json.data.page_total;
        console.log('收藏列表', that.favorlist);
        that.$invoke('collectionList', 'refreshList', that.favorlist);
        that.$apply();
      } else {
        tip.error(json.data.msg)
      }
      that.showLoading = false;
    }
    onLoad(options) {
      this.currentTab = options.type;  // options.type  0：我的足迹 ，1：我的收藏
      console.log('初始化参数', options);
      options.type == 0 ? this.getUserBrowse() : this.getUserFavorite();
      wepy.setNavigationBarTitle({ title: this.tabList[options.type] });  // 设置标题
      this.winHeight = this.$parent.globalData.systemInfo.windowHeight;  // 设置高度
      this.$apply();
    }
    computed = {}
    methods = {
      getCurrentTab(current, evt) {
        this.currentPage = 1;
        this.page_total = 0;
        let that = this;
        that.currentTab = current;
        wepy.setNavigationBarTitle({title: this.tabList[current]});  // 设置标题
        console.log('current tab:', current);
        if (current == 1) {
          that.getUserFavorite();
          that.favorlist = {};
        } else {
          that.getUserBrowse();
          that.browselist = {};
        }
        that.$apply();
      },
      /**
       * 滑动切换tab
       */
      bindChange(e) {
        let that = this;
        that.currentTab = e.detail.current;
        console.log("change tab...." + e.detailcurrent);
        that.$apply();
      },
    }
    setTitle(cur) {
      wepy.setNavigationBarTitle({
        title: this.tabList[cur]
      })
    }
    events = {}
    // 加载更多
    onReachBottom() {
      console.log("加载更多");
      let that = this;
      that.showLoading = true;
      console.log(that.page_total + "===" + that.currentPage);
      // 判断总页数是否大于翻页数
      if (that.page_total > that.currentPage) {
        // 防止重复加载
        if (that.preventRepeatReuqest) {
          return true;
        }
        that.preventRepeatReuqest = true;
        that.currentPage++;
        console.log(this.currentTab);
        if (this.currentTab == 0) {
          console.log("下拉收藏");
          that.getUserBrowse(that.currentPage);
        } else {
          that.getUserFavorite(that.currentPage);
        }
        that.preventRepeatReuqest = false;
      } else {
        that.showLoading = false;
      }
    };
  }
</script>

<style lang="less">
  .tab_box {
    background: #fff;
    padding: 0 120rpx;
  }
</style>
